This is a list of genetic algorithm (GA) applications.
Airlines revenue management
Artificial creativity
Audio watermark insertion/detection
Automated design = computer-automated design
Automated design of mechatronic systems using bond graphs and genetic programming (NSF)
Automated design of industrial equipment using catalogs of exemplar lever patterns
Automated design of sophisticated trading systems in the financial sector
Automated design, including research on composite material design and multi-objective design of automotive components for crashworthiness, weight savings, and other characteristics
Bayesian inference links to particle methods in Bayesian statistics and hidden Markov chain models
Bioinformatics Multiple Sequence Alignment
Bioinformatics: RNA structure prediction
Bioinformatics: Motif Discovery
Biology and computational chemistry
Building phylogenetic trees.
Calculation of bound states and local-density approximations
Chemical kinetics (gas and solid phases)
Climatology: Modelling global temperature changes
Climatology: Estimation of heat flux between the atmosphere and sea ice
Clustering, using genetic algorithms to optimize a wide range of different fit-functions.
Code-breaking, using the GA to search large solution spaces of ciphers for the one correct decryption.
Computer architecture: using GA to find out weak links in approximate computing such as lookahead.
Computer-automated design 
Configuration applications, particularly physics applications of optimal molecule configurations for particular systems like C60 (buckyballs)
Construction of facial composites of suspects by eyewitnesses in forensic science.
Container loading optimization
Control engineering,
Data Center/Server Farm.
Design of water resource systems 
Design of anti-terrorism systems 
Distributed computer network topologies
Electronic circuit design, known as evolvable hardware
Gene expression profiling analysis.
Feynman-Kac models 
Financial mathematics
File allocation for a distributed system
Filtering and signal processing 
Finding hardware bugs.
Game theory equilibrium resolution
Genetic Algorithm for Rule Set Production
Economics
Scheduling applications, including job-shop scheduling and scheduling in printed circuit board assembly. The objective being to schedule jobs in a sequence-dependent or non-sequence-dependent setup environment in order to maximize the volume of production while minimizing penalties such as tardiness. Satellite communication scheduling for the NASA Deep Space Network was shown to benefit from genetic algorithms.
Groundwater monitoring networks
Learning robot behavior using genetic algorithms
Image processing: Dense pixel matching
Learning fuzzy rule base using genetic algorithms
Linguistic analysis, including grammar induction and other aspects of Natural language processing (NLP) such as word sense disambiguation.
Marketing mix analysis
Mechanical engineering
Medicine: Clinical decision support in ophthalmology and oncology
Mobile communications infrastructure optimization.
Molecular structure optimization (chemistry)
Multidimensional systems
Multimodal Optimization 
Multiple criteria production scheduling
Multiple population topologies and interchange methodologies
Mutation testing
Neural Networks; particularly recurrent neural networks
Operon prediction.
Optimisation of data compression systems, for example using wavelets.
Parallelization of GAs/GPs including use of hierarchical decomposition of problem domains and design spaces nesting of irregular shapes using feature matching and GAs.
Plant floor layout
Pop music record production
Power electronics design.
Protein folding and protein/ligand docking
Quality control
Rare event analysis 
Real options valuation 
Representing rational agents in economic models such as the cobweb model
Selection of optimal mathematical model to describe biological systems
Software engineering
Solving the machine-component grouping problem required for cellular manufacturing systems
Stochastic optimization 
Tactical asset allocation and international equity strategies
Timetabling problems, such as designing a non-conflicting class timetable for a large university
Training artificial neural networks when pre-classified training examples are not readily obtainable (neuroevolution)
Traveling salesman problem and its applications
Vehicle routing problems with multiple soft time windows, multiple depots and an heterogeneous fleet
Wireless sensor/ad-hoc networks.


== References ==