
Curly-bracket languages[edit]
The curly-bracket or curly-brace programming languages have a syntax that defines statement blocks using the curly bracket or brace characters { and }. This syntax originated with BCPL (1966), and was popularized by C (1972). Many curly-bracket languages descend from or are strongly influenced by C. Examples of curly-bracket languages include:

ABCL/c+
Alef
Limbo
Go
AutoHotkey
AWK
B
bc
BCPL
C – developed circa 1970 at Bell Labs
C++
C#
Ceylon
ChucK – audio programming language
Cilk – concurrent C for multithreaded parallel programming
Cyclone – a safer C variant
D
Dart
DASL – based on Java
E
eC
ECMAScript
ActionScript
ECMAScript for XML
JavaScript
JScript
TypeScript
GML (Game Maker Language)
GLSL
ICI
Java
Processing
Groovy
Join Java
Kotlin
Tea
X10
LPC
MSL
MEL
Nemerle – combines C# and ML features, provides syntax extension abilities
PCASTL
Perl
PHP
Pico
Pike
R
Rust
S-Lang
Scala
sed
SuperCollider
Swift
UnrealScript
Windows PowerShell (Microsoft .NET-based CLI)
Yorick
Dataflow languages[edit]
Dataflow programming languages rely on a (usually visual) representation of the flow of data to specify the program. Frequently used for reacting to discrete events or for processing streams of data. Examples of dataflow languages include:

Hartmann pipelines
G (used in LabVIEW)
Lucid
Max
Oz
Prograph
Pure Data
Reaktor
StreamBase StreamSQL EventFlow
VEE
VHDL
VisSim
WebMethods Flow
