The best programming languages you can learn
crowd around computer
Exemplary choice. (Reuters/Benoit Tessier)
Share
Written by
Quora
April 12, 2016

This question originally appeared on Quora: What are the best programming languages to learn today? Answer by Avi Flombaum, co-founder and dean at Flatiron School.

What programming language you learn depends entirely on who you are and what your goal is. I’m going to assume you’re an informed beginner, meaning you haven’t been writing code professionally and are just looking to pick up a new language, but you also are not in the situation where you’ve never tried it before—maybe you’ve messed around with some online tutorials, and are thinking about taking it more seriously.

So for you, informed beginner, the first thing you need to think about is what’s motivating you. Are you looking to get a job? Build an app? Pick up a hobby? Picking what and how you learn based on your end goal should be the single most important factor in your decision making—not the market, not what’s trendy, and not what a random person tells you is best to start with. The reason for that is simple: learning to code is really, really hard. It will require you to think in brand new ways and deal with tremendous amounts of frustration and self-doubt. If you’re motivated to learn because you want to build an iOS app, start with Swift/Objective-C. If you’re dying to build an Android app, learn Java and Android. If you want to make visualizations on the web, start with Javascript and then the D3.JS framework. While none of these might be the objective “best first language,” the single most important thing you can do is be motivated, and if you have a personal connection to some goal or idea, focus on that—the benefit will outweigh anything else.

I know all that sounds a little hokey, but I truly think that my biggest responsibility as an educator is to inspire students to fall in love with code. Hence the Flatiron School homepage (“Learn Love Code”) and the giant quote on the wall on campus:

Now that that’s out of the way, let’s look at some specific options.

Assuming you’re not necessarily interested in system programming (like building an operating system), you’ll first want to figure out if you’re interested in the front-end or back-end.

On the front-end side, your choices are pretty clear: HTML, CSS, and Javascript. Once you have a handle on those, you’ll want to start messing around with some front-end frameworks like Ember, Angular, etc…

Regarding back-end languages, you have a few primary choices.

    Java—I believe Java is the most common programming language in use today. It’s what the AP exam uses to teach computer science (CS), and is the lingua franca at most universities for those considering a CS degree. It’s also the core language needed for Android development. So, if you’re looking to get a CS degree or build native Android apps, you may want to start here.
    Python—Python is what’s used at Google, and is also being increasingly taught at universities. Its true strength is in data, so if you’re looking to become a data scientist, you’ll likely need to learn Python somewhere along the way. Aside from that, it’s got its own web framework (Django) which makes it a great option for building web applications.
    Ruby—My bias will shine through here—I absolutely love Ruby. It was developed in the 1990s and exploded in popularity after the creation of Rails, which allowed people to easily build apps for the web. Ruby is very similar to Python in a lot of ways, but the small differences are what makes me love it (and make it such a great language for people starting out). First, Ruby has a tremendously active and welcoming open-source community. One of the core tenants of Ruby is “MINSWAN,” which means Matz (creator of Ruby) Is Nice So We Are Nice. Additionally, Ruby is incredibly expressive. Where in Python it is viewed that there should be one, and only one, right way to do something, Rubyists believe that the way we write code is an expression of our values and individuality.

Finally, it’s incredibly readable. This is how one would write a simple “Hello World” program in Java:

    public class Main {
    public static void main(String[] args) {
    System.out.println(“Hello, World!”);
    }
    }

This is “Hello World” in Ruby:

    puts “Hello, World!”

While eventually it’s important to learn what is “abstracted away” in Ruby, as a beginner, this language allows you to focus on the logic rather than the syntax.

One question people ask me a lot is whether they should just learn full-stack Javascript (which means learning Node.js instead of a server-side language like Ruby/Python/Java).

Javascript is a necessary language for anyone looking to develop for the web. But it was not designed to build complex, scalable web applications. So when people talk about the rise of JS, I think it’s important to separate its use in front-end vs back-end.

Whatever kind of developer you want to be, if you’re working with the web, you’re using Javascript on the front-end. For the back-end though, server-side languages like Ruby/Python/Java (and there are more) are still more robust, stable, and popular than Node.js. I’m excited about Node’s potential, especially since it’s growing so fast, but it’s still a small piece of the pie. So for now, I think it’s critical that anyone that wants to be a back-end or full-stack developer gain a strong foundation in a server-side language.

At Flatiron School, we teach both full-stack Ruby and full-stack Javascript (here’s a syllabus you can download). While a portion of our students are excited about getting jobs as front-end developers, and just focusing on Javascript for them would suffice, the majority of our students come to learn the full-stack. For that, gaining a strong foundation in programming concepts through Ruby before moving on to web frameworks like Rails; and then again a strong foundation in JS before moving on to things like Node or front-end frameworks like Angular; is the best way to prepare students successfully for the future.

Ultimately, though, the first language will be the hardest. It’s like learning to play guitar for the first time. You have to train your brain to work in an entirely new way. After that, picking up another instrument is relatively trivial. So focus on whatever’s going to get you fired up and keep you motivated and you’ll do great.

You can follow Quora on Twitter, Facebook, and Google+.

More from Quora:

Is attending a coding school/bootcamp enough to get a job as an engineer at a top tech company?

Will coding still be relevant in 2025?

Is it possible to shift to a software job after the age of 43 years?
Most Popular
Game of Thrones
“Game of Thrones” just violated the last sacred rule of television
FALLEN APPLE
Apple’s stock is on its worst slide in nearly two decades
Steve Jobs, the last time Apple had a slide like this.(AP Photo/Susan Ragan)
Share
Written by
Mike Murphy
@mcwm
May 02, 2016

Apple has been having a rough few days.

Last Tuesday, it reported a fall in quarterly sales for the first time in 13 years. And though investors had been expecting poor results, they’ve apparently been having a tough time digesting these. As a result, Apple’s stock did something today that it hasn’t done since 1998: It closed down from the previous trading day’s price for an eighth consecutive day, at $93.64.

The last time Apple’s stock slid for eight days in a row was July 1998, according to CNBC. That was about a year after the return of founder Steve Jobs, who was still in the process of cutting projects and reshaping the company into the consumer electronics powerhouse it became in the 2000s.

Last week, Apple announced its first ever year-over-year decline in quarterly iPhone sales, and first drop in quarterly revenue since 2003. The company cited a weakness in sales in China—its second-largest market—as one of the main reasons its iPhone sales were down. And while the smartphone makes up the vast majority of Apple’s quarterly revenues, some have also wondered what else the company has up its sleeve, as sales from its Mac computers and iPad tablets were also down on the quarter. On top of that, the company has still not disclosed how many Apple Watches have sold since launching last year, but the device probably hasn’t made as much of a splash as Apple would’ve liked.

Of course, Apple recovered quite spectacularly after that last slide in 1998, and, perhaps, as Jobs always liked to say at product announcements, the company has just one more thing that it wants to show off.
Get the Quartz Daily Brief in your inbox:
For early morning delivery
Feel free to periodically send me announcements and special offers from Quartz.
EU’s spring forecast, HSBC profits, bee-saving pooch. All this and more in today's Daily Brief.

