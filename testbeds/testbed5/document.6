Python is an Equal Opportunity Programming Language

The landscape of programming languages is dynamic and bewilderingly complex, with literally hundreds of languages in use right now across the world. Each has its own pros and cons, its own quirks, its own trajectory of waning or waxing popularity. And each is buoyed by its own community of programmers, bound into a subculture of sorts. In this way, we can say a language, and the community supporting it, has a “character.”

Motherboard talked to David Stewart, an Intel® Software Evangelist, open-source software expert and manager in the Intel Data Center Software Technology group, about a widely accessible programming language, Python. It’s notable for its accessibility to neophyte programmers, and the civil, inclusive tenor of discourse within its community, particularly towards women.

The popularity of Python has grown steadily in recent years. It’s now among the most common “first languages” taught to novice programmers. Recently, several women-lead Python groups have emerged, hosting workshops to teach women how to code. Guided by Stewart’s deep understanding of Python, Motherboard had the opportunity to discuss what’s in store for the future.

Motherboard: Let’s start from the beginning. Can you tell me what Python is?

David Stewart: Python is a programming language. It’s become pretty much ubiquitous in cloud computing. In fact, the biggest projects in open-source cloud computing infrastructure, like OpenStack, are all written in Python.

“Pythonic” programming has also become extremely popular with people who want to write in this new area called "DevOps”—a combination of people who are doing software development and system operations. And folks are trying to write code doing system-administration kinds of tasks, too, or tasks that don’t require a ton of programming, that you want to do kind of quickly.

If you look at the top computer science schools in the country today, the majority of them are teaching this language Python as a first language. What's great about it from a teaching perspective is it’s extremely friendly, even for non-programmers. You don’t have to spend a lot of time fully describing the data types and stuff like that. You more or less just start programming and the language itself figures out what the type information is and handles that all correctly. 
