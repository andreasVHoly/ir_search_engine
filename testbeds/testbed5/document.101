Scratch (programming language)
From Wikipedia, the free encyclopedia
Scratch (programming language)
Scratchcat.svg
Paradigm	event-driven, imperative
Designed by	Mitchel Resnick
Developer	MIT Media Lab Lifelong Kindergarten Group
First appeared	2002; 14 years ago (test) 2005; 11 years ago (official) 2013; 3 years ago (Scratch 2)
Typing discipline	dynamic
Implementation language	Squeak, ActionScript (Scratch 2.0)
OS	Windows, OS X, Linux
License	GPLv2 and Scratch Source Code License
Filename extensions	.scratch (Scratch 0.x)
.sb, .sprite (Scratch 1.x)
.sb2, .sprite2 (Scratch 2.0+)
Website	scratch.mit.edu
Major implementations
Scratch
Influenced by
Logo, Smalltalk, HyperCard, StarLogo, AgentSheets, Etoys
Influenced
Scratch Jr, Snap!
Scratch is a free visual programming language.[1] Scratch is used by students, scholars, teachers, and parents to easily create animations, games, etc. and provide a stepping stone to the more advanced world of computer programming. It can also be used for a range of educational and entertainment constructionist purposes from math and science projects, including simulations and visualizations of experiments, recording lectures with animated presentations, to social sciences animated stories, and interactive art and music.[2] Viewing the existing projects available on the Scratch website, or modifying and testing any modification without saving it requires no online registration.

Scratch allows users to use event-driven programming with multiple active objects called sprites.[1] Sprites can be drawn, as vector or bitmap graphics, from scratch in a simple editor that is part of Scratch, or can be imported from external sources, including webcams.

As of 2013, Scratch 2 is available online and as an application for Windows, OS X, and Linux (Adobe Air Required).[3][4] The source code of Scratch 1.x is released under GPLv2 license and Scratch Source Code License.[5]

Contents  [hide] 
1	Origin of name
2	Educational use
3	User interface
4	Community of users
4.1	Online community
5	Features and derivatives
6	See also
7	References
8	External links
Origin of name[edit]
“Scratching” in the language of computer science means to reuse code that can be beneficial and effectively used for other purposes and easily combined, shared and adapted to new scenarios, which is a key feature in Scratch – “remix”, in which users can download and build up on public projects uploaded and developed by other users. It also gives credit to the participant who built on the original work and to the participant who created the original program.[6] The name was derived from turntablism's technique of scratching[6][7] (i.e., mixing sounds), relating the ease of mixing sounds to the ease of mixing projects made with Scratch.

This research advanced understanding of the effective and innovative design of new technologies to enhance learning in after-school centers and other informal-education settings, and broadened opportunities for youth from under-represented groups who became designers and inventors with new technologies. Scratch was iteratively developed based on ongoing interaction with youth and staff at Computer Clubhouses. The use of Scratch at Computer Clubhouses served as a model for other after-school centers demonstrating how informal-learning settings can support the development of technological fluency, enabling young people to design and program projects that are meaningful to themselves and their communities.[8]

The MIT Media Lab's Lifelong Kindergarten group, led by Mitchel Resnick, and its Montreal-based consulting company Playful Invention Company, co-funded by the latter with Brian Silverman and Paula Bonta, together developed the first desktop-only version of Scratch in 2003. Its purpose was to aid young people, mainly for ages 8 and up, to learn programming.[9]


The new Scratch homepage theme
Scratch 2 was released in May 2013.[1] With its introduction, custom blocks can be defined within projects.[10]

In 2015, the Scratch homepage was updated with a new theme. As of January 17, 2016, only the homepage had been updated with this new theme and the rest of the site continued to use the old theme.

Educational use[edit]
Scratch was made popular in the UK through Code Clubs. These use Scratch as the introductory language because of its relative ease to make interesting programs and because skills learnt through Scratch can be applied to other basic programming languages like Python and Java.

Scratch is not exclusively for creating programs, since it provides a lot of visuals, programmers can create animated stories such as “The Pizza Dude”, “Haiku”, or “Gemclan”. For older students, they can use Photo Journalism that teaches the basic background of journalism. Students that want to specialize in math can use Lemonade Stand, “Dino Odd and Even”, “Data Workshop”, or “Ellipserator” that mainly focuses on geometry. Scratch flexibility allows teachers to create conceptual and visual lessons and science lab assignments, as Scratch is a useful tool to create animations that help visualize difficult concepts such as plant cell mitosis, water cycle, Galileo Thermometer and Hooke’s Law Experiment. Within the social sciences, instructors can create quizzes, games and tutorials that stimulate the mind and interact with the student.[11] Using Scratch allows young people to understand the logic of programming and how to creatively build and collaborate.[12] Scratch lets students create "meaningful personal as well as educational projects" which allows students a "practical tool" to express themselves after learning to use the language.[6]

Harvard University lecturer Dr. David J. Malan prefers using Scratch over commonly used introductory programming languages, such as Java or C, in his introductory computer science course. However, there is a limited benefit in a college level education. Malan switches his course’s language to C after the first week.[13][14]