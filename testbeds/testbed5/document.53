 Future of programming prediction No. 11: Outsourcing and insourcing will remain deadlocked

One standard prediction is that all programming work will flow to countries with the cheapest wages.

This bold law of economics is mirrored by the prediction that low-end work will be replaced by automated tools, and the real jobs will be for those who understand the business.

Both will continue to be true. Outsourcing teams will win jobs with low bids but be squeezed by new automated tools. One set of websites makes it easy to hire low-wage workers across the globe. Another set of sites is making it easier and easier to go from 0 to 60 without hiring teams of people. Squads that depend on outsourcing contracts will find themselves bidding against internal teams of people who know the business and don't need help.

Future of programming prediction No. 12: Management will continue to misunderstand coders and coding

One of the most painful conversations is listening to nonprogrammers in suits make requests. They saw Facebook or eBay or some cool demo site do something slick, and now they want you to move that button over a smidge. While you're at it, make it behave just like that cool example. Sometimes these requests work out, but often they end in frustration, as the suits don't get what they want.

The typical response is to try to hire a 22-year-old graduate from Stanford. No other school will do. A 23-year-old is already over the hill and probably thinking about life outside of the office. The 22-year-old will be able to apply the bazillion hours to add that sheen of coolness to the CSS.

The suits could spend the years learning the technology, but it's simpler to bid up a few youngsters. Their inability to understand the basic technology is one of the biggest reasons for age discrimination. The only solution that comes to mind is to search for some unicorn programmer. No 30-year-olds or non-Stanford grads need apply.

The companies that get beyond the dreams and find a way to harness the talents of everyone else are the ones that will be the ones who find success. They'll find a way to work at a sane pace to create stable software that offers just enough features to be useful.
