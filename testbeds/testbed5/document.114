Functional languages[edit]
See also: Category:Functional languages
Functional programming languages define programs and subroutines as mathematical functions. Many so-called functional languages are "impure", containing imperative features. Many functional languages are tied to mathematical calculation tools. Functional languages include:

Pure[edit]
Agda
Charity
Clean
Coq (Gallina)
Curry
Elm
Frege
Haskell
Hope
Joy
Mercury
Miranda
Idris
SequenceL
Impure[edit]
APL
ATS
CAL
C++ (since C++11)
C#
Ceylon
D
Dart
Curl
ECMAScript
ActionScript
ECMAScript for XML
JavaScript
JScript
Erlang
Elixir
LFE
F#
FPr
Groovy
Hop
J
Java (since version 8)
Julia
Lisp
Clojure
Common Lisp
Dylan
Emacs Lisp
LFE
Little b
Logo
Scheme
Racket (formerly PLT Scheme)
Tea
Mathematica
ML
Standard ML (SML)
Alice
OCaml
Nemerle
Opal
OPS5
Poplog
Python
Q (equational programming language)
Q (programming language from Kx Systems)
R
Ruby
REFAL
Rust
Scala
Spreadsheets
Wolfram Language
Hardware description languages[edit]
In electronics, a Hardware description language or HDL is a specialized computer language used to describe the structure, design and operation of electronic circuits, and most commonly, digital logic circuits. The two most widely used and well-supported HDL varieties used in industry are Verilog and VHDL. Hardware description languages include:

HDLs for analog circuit design[edit]
Verilog-AMS (Verilog for Analog and Mixed-Signal)
VHDL-AMS (VHDL with Analog/Mixed-Signal extension)
HDLs for digital circuit design[edit]
Advanced Boolean Expression Language(ABEL)
Altera Hardware Description Language(AHDL)
Bluespec
Confluence
ELLA
ESys.net
Handel-C
HHDL
Impulse C
JHDL
Lava
Lola
M
MyHDL
PALASM
Ruby (hardware description language)
SystemC
SystemVerilog
Verilog
VHDL (VHSIC HDL)
