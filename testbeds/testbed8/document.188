Usually, the number of keys is chosen to vary between   and  , where   is the minimum number of keys, and   is the minimum degree or branching factor of the tree. In practice, the keys take up the most space in a node. The factor of 2 will guarantee that nodes can be split or combined. If an internal node has   keys, then adding a key to that node can be accomplished by splitting the   key node into two   key nodes and adding the key to the parent node. Each split node has the required minimum number of keys. Similarly, if an internal node and its neighbor each have   keys, then a key may be deleted from the internal node by combining with its neighbor. Deleting the key would make the internal node have   keys; joining the neighbor would add   keys plus one more key brought down from the neighbor's parent. The result is an entirely full node of  keys.
The number of branches (or child nodes) from a node will be one more than the number of keys stored in the node. In a 2-3 B-tree, the internal nodes will store either one key (with two child nodes) or two keys (with three child nodes). A B-tree is sometimes described with the parameters   —   or simply with the highest branching order,  .
