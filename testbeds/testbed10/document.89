An empirical study of three machine learning methods for spam filtering 

Chih-Chin Lai *

1. Introduction In recent years, e-mails have become a common and important medium of communication for most Internet users. However, spam, also known as unsolicited commercial/bulk e-mail, is a bane of e-mail communication. A study estimated that over 70% of today’s business e-mails are spam [1]; therefore, there are many serious problems associated with growing volumes of spam such as filling users’ mailboxes, engulfing important personal mail, wasting storage space and communication bandwidth, and consuming users’ time to delete all spam mails. Spam mails vary significantly in content and they roughly belong to the following categories: money making scams, fat loss, improve business, sexually explicit, make friends, service provider advertisement, etc., [13]. One example of a spam mail is shown as Fig. 1. Several solutions have been proposed to overcome the spam problem. Among the proposed methods, much interest has focused on the machine learning techniques in spam filtering. They include rule learning [4,6], Naı¨ve Bayes [2,9], decision trees [5], support vector machines [7,8,16] or combinations of different learners [10]. The common concept of these approaches is that they do not require specifying any rules explicitly to filter out spam mails. Instead, a set of training samples (pre-classified e-mails) is needed. A specific machine-learning technique is then used to ‘‘learn’’ and ‘‘produce’’ the classification model from this data. From the machine learning viewpoint, spam filtering based on the textual content of e-mail can be viewed as a special case of text categorization, with the categories being spam or non-spam [8]. Sahami et al. [9] employed Bayesian classification technique to filter junk e-mails. By making use of the extensible framework of Bayesian modeling, they can not only employ traditional document classification techniques based on the text of e-mail, but they can also easily incorporate domain knowledge to aim at filtering spam e-mails. Androutsopoulos et al. [2–4] presented a series of papers that extended the Naı¨ve Bayes (NB) filter proposed by Sahami et al. [9], by investigating the effect of different number of features and training-set sizes on the filter’s performance. Meanwhile, they compared the performance of NB to a memory-based approach, and they found both above-mentioned methods clearly outperform a typical keyword-based filter. Drucker et al. [7] used support vector machine (SVM) for classifying e-mails according to their contents and compared its performance with Ripper, Rocchio, and boosting decision trees. They concluded that boosting trees and SVM had acceptable test performance in terms of accuracy and speed. However, the training time of boosting trees is inordinately long. Woitaszek et al. [17] utilized a simple SVM and a personalized dictionary to identify commercial electronic mail. The SVM-based mail classification system was implemented as an add-in for Microsoft Outlook XP, allowing desktop users to quickly identify unsolicited email. Although it is a popular topic in machine learning, very few approaches using instance-based nearest neighbor techniques are presented for spam filtering. Trudgian and Yang [14] examined the performance of the kd-tree nearest neighbor algorithm for word based spam mail classification and compared it to other common methods. Several attempts have been made to evaluate the performance of machine-learning methods on spam filtering task; however, these studies focused on features which extracted from message body only. Here we study different parts of an e-mail that can be exploited to improve the categorization capability, by giving experimental comparisons of three respective machine learning algorithms. These techniques are Naı¨ve Bayes (NB), k-nearest neighbor (k-NN), and support vector machines (SVMs). We considered the following four combinations of an e-mail message: all (A), header (H), subject (S) and body (B). The above-mentioned three methods with these features are compared to help evaluate the relative merits of these algorithms. In addition to using a single method for spam filtering, we adopted an integrated approach which considered two different methods to anti-spam filtering and evaluated its performance. The rest of this paper is organized as follows. Section 2 gives a brief review of three machine learning algorithms and details of the integrated approach. Section 3 provides the considered features and experimental results designed to evaluate the performance of different experimental settings are presented in Section 4. The conclusions and directions for future works are summarized in Section 5.
