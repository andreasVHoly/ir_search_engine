Fall Classification by Machine Learning Using Mobile Phones


Mark V. Albert , Konrad Kording, Megan Herrmann, Arun Jayaraman


Introduction

Falls in the elderly are a relatively common occurrence that can have dramatic health consequences. For people over 75 years old, the estimated incidence of falls is over 30 percent per year [1]. Nearly half of nursing home residents fall each year, with 40% falling more than once [2]. Falls can cause physical injury including fractures, head injuries, or serious lacerations. In community-dwelling patients who have fallen in a given year, the rate of serious injury is 5–10% [3], [4]. Falls can also elicit psychological consequences such as decreased independence [5] and increased fear of falling [6], [7]. This can lead to an avoidance of activity that can bring about a pattern of increasing isolation and deterioration [8], [9]. The impact of falls can be dramatic on certain populations, motivating the search for improved methods to minimize and respond to falls.

There are a number of strategies used to minimize falls [10]. There are physical training strategies such strength training [11] and balance training [12]. Modifying the home or workplace decreases the chance of falling [13]. The number of falls can be decreased by optimizing medication [14] or even having patients take nutritional supplements such as Vitamin D [15]. There are many therapies, medications, and lifestyle changes that can influence the probability of falling; however, at this time more research needs to be conducted. Improving the ability to track falls has the potential to streamline a wide range of fall-related research.

One objective and convenient way of documenting patient falls is through the use of mobile phones; most smart phones are equipped with accelerometers that can be used to detect when patients fall with exceptionally high accuracy. Falls are generally high-impact events, making detection simpler than identifying other daily activities. For example, some previous fall detection algorithms used only thresholds for the low freefall accelerations followed by high impact accelerations [16], [17]. Unfortunately, these studies either have very limited data sets (e.g. 3 young volunteers in very limited control circumstances) [16] or lower accuracy rates of nearly 80% for mobile phones [17]. Additional studies have simply observed the variations in a number of features [18]. Here we will apply a larger number of features, as has been done in previous studies using linear regression to predict falls [19], but use classifiers that have been successfully applied in activity recognition for mobile phones [20].

We use these classifiers to not only detect falls, but also to classify the particular type of fall. For example, in prosthetics research, adjusting aspects of a knee joint is often a tradeoff between which type of fall will occur. Different types of falls can result in different types of injuries. In the elderly a slip may be more or less likely to result in a serious injury than a trip simply because of the ease of breaking a forward versus backward fall. Also, because people tend to be more stable laterally, it is more likely when given a lateral fall that it may be from a loss of consciousness. Knowing the type of fall can be important for coordinating a more appropriate response to the fall, or adjusting the treatment to prevent a similar type of fall in the future.

The main focus of our study is to not only identify falls, but also classify their type. We can accomplish very high accuracy by using a much larger feature set than previous methods and by using current machine learning approaches to deal with the large number of resulting features. We demonstrate classification by having subjects simulate the different types of falls and record the resulting accelerations. For analyzing the ability to detect falls, these recordings are compared to fall-like events taken from a large dataset of everyday movements. Importantly, we show that our features and classifiers are capable of detecting and classifying the type of fall with a much higher level of accuracy than current techniques.

Results

To create and validate the machine learning approaches for fall detection and classification, we collected two data sets. Fall data was obtained by simulating four different types of falls, representing four different directions in which someone could fall (slip-backward, trip-forward, left/right lateral – figure 1a) while subjects wore accelerometers on a belt, as detailed in the methods. Subjects also wore the accelerometers during everyday activities for a week, which measured a range of accelerations that could potentially be misclassified as false-positives. We applied five different machine learning classifiers to perform both the detection and the fall-type classification.

We collected the accelerometer data in a standardized way. Both a mobile phone and a separate, dedicated accelerometer were attached on belts and placed on the back of subjects. For simplicity, analysis is only shown and discussed for the mobile phone accelerometer. We found that the use of dedicated accelerometers provided comparable results to those presented for the mobile phone – although we note a possible ceiling effect as other classification strategies have shown significant improvements using dedicated accelerometers [17]. The orientation of the phone determined the orientation of the accelerometer axes. Because of the orientation of the phone on the belt, the x, y, and z-axes of the accelerometer corresponded to the up, left, and backward directions on the subjects (fig 1b and c). This setup was used to record from subjects for the four classes of simulated falls, as well as collecting recordings when the subjects wore the belts for a week. The goal of recording the data in this standardized way was to make interpretation clearer and analysis more accurate.

Classification algorithm

Five different classification algorithms were used for detection and classification: support vector machines (SVM) [32], sparse multinomial logistic regression (SMLR) [33], naïve Bayes, decision trees, and k-nearest neighbors. Many of these techniques have been successfully applied in a large number of machine learning classification problems with a great deal of practical success on large feature sets. We normalized each feature to have mean 0 and unit variance. The SVM classifier was from the LIBSVM package [32]. We applied radial basis functions, giving us two hyperparameters – the soft slack variable, C, and the size of the Gaussian kernel, γ. The accuracy was highly robust to small changes in the hyperparameters, so reasonable choices were obtained by a grid search of 10x where x is an integer between -5 and 5. The values which gave the highest 10-fold cross-validation accuracy are reported (C = 10 and γ = 0.1). The logistic regression classifier (SMLR) used regularization (hence, “sparse”) by including a penalization term on coefficient weights. In effect, regularization is an automatic way of performing feature selection, which helps avoid overfitting, and greatly improves crossvalidation accuracy. By changing the coefficient on the penalization term, λ, the system is biased to use more or fewer features. The parameter, λ, was found in the same way as the hyperparameters for SVM, giving λ = 0.0001). k-nearest neighbors only require a hyperparameter ‘k’ for the number of neighbors to average from. In this case, k = 3 was found to maximize the 10-fold crossvalidation accuracy. Naïve Bayes and decision trees had no hyperparameters. We used the standard MATLAB implementation for the last three classifiers (NaiveBayes, classregtree, knnclassify).
