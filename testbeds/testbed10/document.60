Analysis of interpretability-accuracy tradeoff of fuzzy systems by multiobjective fuzzy genetics-based machine learning

There are two main goals in the design of fuzzy rule-based systems: one is the accuracy maximization and the other is the complexity minimization. In the 1990s, emphasis was placed on the accuracy maximization. Various approaches have been proposed to improve the accuracy of fuzzy rule-based systems using learning algorithms of neural networks and optimization techniques in evolutionary computation (e.g., see Cordon et al. [1] for a review on various evolutionary optimization techniques for the design of fuzzy rule-based systems). Those approaches usually improve the accuracy of fuzzy rule-based systems at the cost of their interpretability. That is, the complexity of fuzzy rule-based systems usually increases as a result of the accuracy maximization. Some researchers tried to simultaneously perform the accuracy maximization and the complexity minimization in order to design fuzzy rule-based systems with high accuracy and high interpretability [2–4]. It is, however, impossible to simultaneously optimize these two objectives. Thus the existence of the accuracy-complexity tradeoff in the design of fuzzy rule-based systems has been realized [5,6]. Recently, the accuracy maximization and the complexity minimization have been often discussed as multiobjective optimization problems [5–9]. The accuracycomplexity tradeoff has been also studied for the design of neural networks [10,11]. In the field of fuzzy rule-based systems, the accuracy-complexity tradeoff is often referred to as the interpretability-accuracy tradeoff. This is because high interpretability is the main advantage of fuzzy rule-based systems over other nonlinear systems such as neural networks. One of the first attempts to simultaneously perform the accuracy maximization and the complexity minimization of fuzzy rule-based classifiers was GA-based rule selection of Ishibuchi et al. [12,13] in the mid-1990s. They used the following fitness function for fuzzy rule selection: fitnessðSÞ ¼ w1 f1ðSÞ w2 f2ðSÞ; ð1Þ where S is a set of fuzzy rules (i.e., S is a fuzzy rule-based classifier), f1(S) is the number of correctly classified training patterns by S, f2(S) is the number of fuzzy rules in S, and w1 and w2 are prespecified positive constants. A standard single-objective genetic algorithm was used to maximize the fitness function in (1). The GA-based rule selection method was extended to two-objective rule selection in [14], where a simple multiobjective genetic algorithm was used to find a large number of non-dominated rule sets with respect to the following two objectives: Maximize f 1ðSÞ and minimize f 2ðSÞ: ð2Þ This formulation was further extended to three-objective rule selection in [15,16] as follows: Maximize f 1ðSÞ; minimize f 2ðSÞ; and minimize f 3ðSÞ; ð3Þ where f3(S) is the total number of antecedent conditions (excluding ‘‘don’t care’’ conditions) of fuzzy rules in S. Since the number of antecedent conditions of each fuzzy rule is often referred to as the rule length, f3(S) can be viewed as the total rule length. While only the number of fuzzy rules was considered as a complexity measure in the two-objective formulation in (2), the length of each fuzzy rule was also taken into account in the three-objective formulation in (3). 

GA-based rule selection in [12–16] consists of two stages: heuristic generation of candidate rules and genetic rule selection. In the handling of low-dimensional problems such as the iris data set with four attributes, all possible fuzzy rules can be used as candidate rules [12–14]. Heuristic prescreening of candidate rules, however, is necessary in the candidate rule generation stage [15,16] when a GA-based rule selection method is to be applied to high-dimensional problems such as the wine data set with 13 attributes and the sonar data set with 60 attributes. A data mining technique was used in [16] to generate a prespecified number of promising candidate rules. Genetic algorithms were used in the rule selection stage where each rule set was coded as a binary string. The string length is the same as the number of candidate rules. A number of fuzzy genetics-based machine learning (GBML) algorithms have already been proposed in the literature [1] where fuzzy rule-based systems are generated from numerical data through genetic operations. Fuzzy GBML algorithms are usually classified into two categories as in the case of standard non-fuzzy GBML algorithms: Michigan approach and Pittsburgh approach. A single rule is handled as an individual in the Michigan approach while a rule set is handled as an individual in the Pittsburgh approach. As a result, the evolution of fuzzy rule-based systems is indirectly driven by the fitness evaluation of each fuzzy rule in the Michigan approach while it is directly driven by the fitness evaluation of each rule set in the Pittsburgh approach. There is another category of fuzzy GBML algorithms: iterative rule learning approach where a single rule is obtained from each execution of a GBML algorithm. A fuzzy rule-based system is constructed by its iterative execution (for details, see [1]). In our former studies [17,18], we showed that fuzzy rule-based classifiers can be generated for high-dimensional problems with many attributes by a Michigan-style GBML algorithm even when we use simple grid fuzzy partitions of the pattern space. Those studies demonstrated the necessity of the use of ‘‘don’t care’’ conditions in the handling of high-dimensional problems. We also combined the Michigan and Pittsburgh approaches into a single hybrid algorithm [19]. In this paper, we extend the hybrid fuzzy GBML algorithm to the case of multiobjective optimization. Through computational experiments using a hybrid multiobjective fuzzy GBML algorithm on six benchmark data sets in the UCI Machine Learning Repository (http://www.ics.uci.edu/~mlearn/), we examine the interpretability-accuracy tradeoff in the design of fuzzy rule-based classifiers. This paper is organized as follows. First we explain some basic concepts in multiobjective optimization in Section 2. We also explain the NSGA-II algorithm of Deb et al. [20] in Section 2. Next we explain fuzzy rule-based classifiers, three formulations of their multiobjective design, and our hybrid multiobjective fuzzy GBML algorithm in Section 3. Our GBML algorithm is implemented in the framework of the NSGA-II algorithm. Then we examine the interpretability-accuracy tradeoff in fuzzy rule-based classifiers in detail through computational experiments on benchmark data sets in Section 4. We also compare the three formulations of multiobjective fuzzy rule-based classifier design with each other in Section 4. Our GBML algorithm is compared with the multiobjective fuzzy rule selection method in Section 5. Finally we conclude this paper in Section 6.
