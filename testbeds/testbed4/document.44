 
 So today we will discuss another Visible Surface Detection algorithm. In the last couple of classes we have discussed the concepts of back face culling and then of course the depth buffer or Z buffer based method for Hidden Surface Elimination or Visible Surface Detection VSD. Then of course we discussed the scanline based method which was an extension of these scanline polyfill algorithm in 2D. 
Today we move on to other different type of an algorithm which is conceptual and you will find it to be very interesting and nice which is called the depth sorting or in other words Painter’s algorithm. We will see what is the depth sorting or Painter’s algorithm. So if we look back into the slide here we are talking of a concept where the polygons are painted in the frame buffer in order of decreasing distance from the viewpoint so that is the key idea or the principle of depth sorting or Painter’s algorithm. 
Remember, VSD algorithms are basically nothing but a depth sorting algorithm. It is a sorting algorithm where the key value or the number used or the parameter used for sorting is the depth value in 3D. And in this case the term itself is depth sorting but Painter’s algorithm is probably a more appropriate one which we will see here. We need to paint the polygons in the frame buffer in order of decreasing distance from the viewpoint. And the broad steps in the depth sorting or Painter’s algorithm are that the surfaces are sorted in increasing order of depth and that is the key broad step and to implement that you have to resolve certain ambiguities. 
(Refer Slide Time 04:39 min)
When polygons overlap in depth and if necessary splitting the polygons so that is the second one. Then after this is done the surfaces are scan converted in order starting with the surface of greatest depth. So, if you imagine a three dimensional scenario where there are very large number of polygons say n polygons seen in a few tens of them to few hundreds, few thousands or even a few million polygons in a very complex scenario what you have to do is basically order them in increasing depth so that is what you have to do. 
It is not easy to order polygons in order of web because of course if the viewing direction is from left to right then you could have one polygon here and other polygon there and then you can order. But of course if the polygons are overlapping the scenario like this a polygon one on a polygon two then we have the problem of ambiguity as to which one you should take the first one to solve them by some criteria and then once it is ordered as you see in the slide they have to be scan converted starting with the surface of greatest depth. The question which should automatically come into your mind is why it is also called the Painter’s algorithm. It is also called the Painter’s algorithm because if you visualize the scenario by which a painter draws a three dimensional scene in a canvas, drawing canvas the artist or the painter draws a three dimensional scene. 
How will you start because let us imaging a scenario where he is standing on the bank of river or pond and at a distance he has not only water beyond that but he has the mountain and the sky with the sun rising and in the middle there could be some trees and plants and birds flying. So, if you imagine such a scenario in a beautiful spot or tourist spot or place for tourist to visit then what will the artist do? He will start by painting the background of the scene first because those are the objects which are at the farthest distance with respect to the artist of the viewer in this case. 
So in real scenario you will probably start painting the background sky with the mountains and trees at a very far distance then of course you could probably paint the water body lying in between maybe a few birds flying or floating on the water and then he will draw some nearby structures which could be a small garden with some noise, flower plants and tea pots, shrubs and things like that. 
So we will start from the objects in a sequence and starting from the objects which are at the farthest distance and put them in the background of the scene and then draw the ones which are nearer and so on till at the end he will overlap the scene with objects which are very close to you. Of course the entire view is imagined by the painter that he is viewing through a window which is our imagination of a two dimensional viewport then probably he will also draw the window in the front. So, that is the last one which he will draw because that is the nearest object in. So the painter’s concept is to draw distant object first and then the closest object at the last. That is the sequence we also follow in the depth sorting or the Painter’s algorithm and that is the term. 
I hope the concept is clearer now that why it is called Painter’s algorithm. 
So coming back to the broad steps we will read it again. We have to sort the surfaces in increasing order of depth that is the number one broad step which you will see, find details of these and then when you try to sort surfaces in increasing order of depth I was just mentioning some time before that if you have surfaces which are well separated apart in depth there is 
absolutely no problem in ordering them first. Of course you have to draw them later on but ordering is not a problem if the surfaces are well separated out. Now what will happen is assuming that you have the viewing direction like this going from your right from left or it could be from left to right whatever the case may be and you have the object number one in front of you and the object number two in front of you, then if they are well separated out it is of no problem but assuming you are looking into the ZX or ZY direction, this is Z let us say and this is Y or X and along the depth if you see when they are well separated out there is no problem. But if there is an overlap something like this let us say if it is an overlap then I cannot say that one object is in front of the other one, which one is in front is a case which has to be solved by different criteria then just looking into depth of certain points on the surface. 
So you resolve this ambiguity as seen in the slide when polygons overlap in depth. That is what I was trying to illustrate with my hands as to what you mean by polygons overlapping depth and sometimes you may need to split polygons. Not all the time but sometimes we will see that and this was not an easy matter to handle in the case of the previous algorithm based on scanline. So we will see what Painter’s algorithm does. And after this is done you may land up with more polygons because of splitting, surfaces are then scan converted in order starting with the surface of the greatest depth. Once the ordering is done you have to just scan convert in the descending order. 
After the sorting is over let us say the first element of course if it is already sorted in terms of descending order with the first element having the largest depth so on so just scan convert in the least form left to right sorting in from the surface with the largest depth and the surface with the least depth used to at the end. 
Let us look at this principle of depth overlaps. 
We are talking of two surfaces here and say S1 and S2 are the two surfaces and the limits of the depth are Zmax1 and Zmin1 as given here for the surface S1 and for the surface S2 similarly you have the limits of depth such as Zmax to a Zmin2. And the principle here is the talking of each layer of paint which is nothing but polygon surface of an object because why do you call it a layer of paint? You should always try to imagine you as a painter trying to draw these surfaces with the greatest depth to be drawn first because that is farthest away from you so you paint that and then the one which is closer to you and so on. So I tell you the one which is closest to you. 
Of course if there are only just two surfaces as shown here on the slide then of course you are talking of just two surfaces and the order of them and you scan convert one of them and the one which is closer to you. You start with one which is the farthest away. So the paint and surface, paints and polygons will probably be used interchangeably. Of course some points we only use polygons but keep this in mind when you are rendering polygons in some order we are putting as if some paints on the canvas to simulate a three dimensional scenario. 
So coming back to this point where we talk of each layer of paint which is nothing but a polygon surface of an object it covers of the previous layers while drawing. That means if you draw S1 and then S2 assuming the viewing direction to be negative Z, remember positive Z this is the 
scenario
