 So this is the case when test number four fails so all tests would have fail now. Starting from zero, Z extents, test number one, minimum enclosed rectangle overlap, test number two front test, test number two behind and front in that sequence and then test number four where the polygon themselves overlap that also have failed. If that is the case it is only in this case we reorder the surfaces otherwise if any of these tests would have been passed 0 1 2 3 and 4 up to test number 4 any one of them would have passed what you would have done is you could have gone and scan converted in the way which would have been ordered earlier. 
Only in the case when the entire test fails including the last one the very end that is the polygons overlapping then only we just swap the position in the order in this sequence of the two surfaces S1 and S2 which were ordered earlier based on maximum depth extent. That is what we have used to order them and then if all the tests would have failed if it is S1 and S2 just swap the position and make it S2 S1 and that is what you do. 
So, coming back to this figure that is what we meant by that the test number four where it says that the projections of the two surfaces on to the view plane do not overlap so the left hand side figure says test number four is passed and the right hand side figure says the test number four is failed. How do you go ahead with this test? Minimum enclosed rectangle I said that you could take the vertices and check whether it is inside the other rectangle or check the X and Y limits extents that is very simple whether a polygon is inside another polygon or not. 
A part of the polygon is entering into the two dimensional area of the other polygon. How do you test this? Can you think and give me a reply? Well, if you start to think about checking the vertices you can do a inside outside test of a point inside a polygon. Everybody knows that because we did that in the scanline polyfill algorithm that you can take any point and check whether it is inside another polygon.
So I can take the vertices of one polygon and test whether it is inside the other and so on and so forth you can do that. 
This figure suggest we can do a little work but I can draw figures where none of the vertices of the polygons is inside the other one. Vertices of S1 are not inside S2 and vertices of S2 are not inside S1, this is not the case but still there could be a small part which could lie inside. Or basically one of the vertices have to definitely go inside another polygon otherwise it is not possible. But I can draw cases where definitely vertices are not inside but a section goes inside. 
If you see carefully that you can draw a polygon, two polygons which can do that so vertices test is not sufficient. What you have to do is actually check out, can you guess what? Instead of vertices check the edges. Check if the edges of the two polygons any pair of edges, edge E1 taken from surface S1, edge E2 taken from surface S2 whether they actually intersect. They have to interest if there is an actual overlap between the two polygons. And we know to verify or obtain whether two edges are actually intersecting or not. Remember parametric equation of a line, find out two lines, two parametric equations which is a line clipping problem, we did this to find out valid values of T whether the edges actually intersect or not. So use that for pairs, form pairs of edges from two polygons, edge EI is from polygon one and edge EJ is from polygon two and check all EI EJ EI EJ combinations are intersecting. 
If you find any one of these in fact more than one you should be able to obtain, if there is an actual overlap then you will find that one part of the polygon S1 has gone inside polygon S2 and test number four also has failed. But if it is not, that means none of the surfaces S1intersect with the edges of polygon S2 or none of the edges of the polygon S2 intersect with the edges of the polygon S1 and thus test number four has passed. You have passed test number four keep the ordering go add and scan convert in that order which you have put before the test number zero itself. So I hope you have understood the method by which you can obtain all the tests to be done. Remember, it is very easy I repeat it in sequence quickly, test number zero Z extent overlaps, test number one X and Y extent overlap that is also very easy to do and test number two and three the front and behind test you have to take the 3D vertices of a polygon S1 and check with respect to the plane equation S2 and vice versa. 
Those were the test number two and three in 3D. Test number four finally is the edge based test where you actually check whether the edges intersect or no. That is what you do with test number four. 
And if any one of these tests pass keep the ordering go ahead and scan convert in the order in descending order of depth and that is what you do. But however, if all test fails including test number zero one two three and the fourth test the last one which was just discussed now. Then I am sorry you have to reorder, swap the positions of S1 S2 which you have ordered earlier based on the maximum depth extents so that is what you do in test number four. So let us take a case study, a couple of case studies before we wind up today in the class for depth buffer order. 
Case study one, two surfaces S1 and S2, well the initial order is S1 and S2, why? It is because the Z extent maximum depth extent of surface S1is having more depth and surface S2 that is the one which you have.
That is why S1 and then S2 is the sequence of the order. Now start the testing where you have the Z extent overlap so test number zero fails, that is very clear depth extents overlaps so before the zeroth test fail. X and Y extent overlap, yes that is also test number one fails. Test number one fails because extents overlap. Why also extent could be overlapped? Remember, we are taking the projection ZX plane, you can take on the ZY also so test number one overlaps. 
What about test number two? What was test number two? The surface S1should be completely behind S2 because you are drawing S1first and S2 first that is the initial order. So based on that S1should be completely behind S2 but what does the figure say? It is impossible, S1is definitely not behind S2 in fact it is on the front the other way round, so test number two also fails. 
(Refer Slide Time 48:26 min) 
I hope you have understood why test number two fails because for the test number two to succeed S1should have been completely behind surface S2 which is not possible in this case so test number two also fails. 
What is test number three? Test number three says that S2 should be completely front of S1 that also fails because S2 is not in front of S1it is the other way round. In fact S1is also not completely in front of S2 but S2 is definitely not in front. So test number three also fails what is test number four? The polygon themselves overlap in the X extent or X or Y. So, all the four tests have failed. Z extent fails X and Y extents of the minimum enclosed rectangle fails completely behind completely in front both have failed and the polygons themselves overlap so this ordering is not the correct ordering. 
Here if you carefully see the viewing impression as given in the slide with the viewing direction going towards negative Z actually you should draw S2 first and then S1 because if you draw in this order what will happen is the S2 which is obscured or occluded by surface S1which is drawn later on will appear in the front no this is wrong. So logic says, by Painter’s logic S2 should be drawn first and then S1 where the depth is ordering independence. So all the four tests have 
failed, please go and change the order and then scan convert S2 and S1. If you scan convert S2 S1, S2 will be drawn and the S1will be completely obscuring the surface S2 which is correct in terms of the Painter’s logic of the depth ordering. 
We will move on to the case II which is a very interesting phenomenon. If you see here you see the initial order here which is very interesting S1 S2 and S3, why S1 S2 and S3? 
You look into the maximum Z value for each of the surfaces and put that to obtain the initial order which I said earlier. So S1 has the maximum depth value again view direction along negative Z direction S1has the maximum depth then surface S2 and then surface S3. I repeat, S1 has the maximum depth then the surface S2 has a maximum depth and then surface S3 so the order is S1 S2 S3. Now the 

