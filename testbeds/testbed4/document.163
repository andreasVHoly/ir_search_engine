Introduction to 3D Non-Photorealistic Rendering: Silhouettes and Outlines Aaron Hertzmann Media Research Laboratory Department of Computer Science New York University http://www.mrl.nyu.edu/hertzmann/ 1 Introduction In these notes, we survey some of the basic tools used for non-photorealistic rendering of 3D scenes. We will primarily focus on detecting outlines of object shape: silhouettes, boundaries, and creases. (Hatching and shading, which are also very important for communicating shape, are discussed elsewhere in the course notes.) The algorithms in this section can be divided into algorithms that operate in the image space (2D), and algorithms that operate in world space (3D). 2 Outlines in Image Space The easiest way to detect silhouettes is to let your existing graphics packages do all the hard work. By rendering images in different ways and then post-processing, you can quickly produce pleasing results. Image-space non-photorealistic rendering algorithms use rendered (and, thus, sampled) images, and are limited by the precision of the images. However, image space silhouette detection is sufficient for many applications. Exact algorithms that operate in 3D are described in Section 3. Some of the simplest silhouette algorithms were introduced by Gooch et al. [12], and are described in Chapter 10 of the course notes. A related method by Raskar and Cohen [17] allows variable-length line segments; see their paper for more details. 2.1 Outlines with Edge Detection A very simple way to generate a line drawing of a 3D scene would be to render the scene from the desired point of view, detect edges in the image, and display the edges. However, the edges of a