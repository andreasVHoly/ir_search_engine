3_GB_barrier
In , the '''3 GB barrier''' is a limitation of some  s running on  s. It prevents the operating systems from using more than about 3&nbsp;GB () of main memory (). The exact barrier varies by  and I/O device configuration, particularly the size of ; it may be in the range of 2.75 GB to 3.5 GB.
The barrier is not present with a  and , or with certain x86 hardware and an operating system such as  or certain versions of  and  that fully support  (PAE) mode on x86.
The barrier is caused by a set of interactions between several components, including the operating system.
==Physical address limits==
It is a common misconception that 32-bit processors and operating systems 
are limited to 4&nbsp;GB (232 bytes) of RAM, as were the original  and other early IA-32 CPUs. Since the 1995 ,
 almost all modern x86 processors can in fact already address up to 64&nbsp;GB (236 bytes) RAM via  (PAE). PAE is a modification of the  address translation scheme. It allows virtual or linear addresses to be translated to  physical addresses, instead of the 32-bit addresses available without PAE.
 The CPU pinouts likewise provide 36 bits of physical address lines to the motherboard. 
Many x86 operating systems, including any version of Linux with a PAE  and some versions of  and , support the use of PAE to address up to 64 GB of RAM on an x86 system.
Use of PAE to address RAM above the 4 GB point allows use of more than 3 GB. There are, however, factors that limit this ability, and lead to the "3 GB barrier" under certain circumstances, even though the processor fully supports PAE. These are described in the following sections.
==Chipset and other motherboard issues==
Although, as noted above, most x86 processors from the  onward do support es up to 64 GB, the rest of the motherboard must participate in allowing RAM above the 4GB point to be addressed by the CPU. 
 and motherboards allowing more than 4 GB of RAM with x86 processors do exist, 
but in the past, most of those intended for other than the high-end server market supported only 4 GB of RAM.
This, however, is not sufficient to explain the "3 GB barrier" that appears even when running some x86 versions of Microsoft Windows on platforms that do support more than 4 GB of RAM.
==Memory mapped I/O and disabled RAM==
Modern personal computers are built around a set of standards that depend on, among other things, the characteristics of the original .  The original PCI bus supported 32-bit physical addresses and 32-bit wide data transfers. PCI (and , and ) devices present at least some, if not all, of their host control interfaces via a set of  locations (MMIO). The address space in which these MMIO locations appear is the same address space as that used by RAM, 
and while RAM can exist and be addressable above the 4 GB point, these MMIO locations decoded by I/O devices cannot be. 
They are limited by PCI bus specifications to addresses of 0xFFFFFFFF (2321) and below. With 4 GB or more of RAM installed, and with RAM occupying a contiguous range of addresses starting at 0, some of the MMIO locations will overlap with RAM addresses. On machines with large amounts of video memory, MMIO locations have been found to occupy as much as 1.8 GB of the 32-bit address space.
The  and chipset are responsible for detecting these address conflicts and disabling access to the RAM at those locations. Due to the way bus address ranges are determined on the PCI bus, this disabling is often at a relatively large granularity, resulting in relatively large amounts of RAM being disabled.
==Address remapping==
x86 chipsets that support more than 4 GB of RAM typically also support memory remapping (referred to in some BIOS setup screens as " remapping"). In this scheme, the BIOS detects the memory address conflict and in effect relocates the interfering RAM so that it may be addressed by the processor at a new physical address that does not conflict with MMIO. On the Intel side, this support once was limited to server chipsets; however, newer desktop chipsets like the Intel 955X and 965 and later support it as well. On the  side, the  and later processors' built-in memory controller supported it from the beginning.
As the new physical addresses are above the 4 GB point, addressing this RAM does require that the operating system be able to use physical addresses larger than 232. This capability is provided by PAE. Note that there is not necessarily a requirement for the operating system to support more than 4 GB  'total'' of RAM, as the total RAM might be only 4 GB; it is just that a portion of it appears to the CPU at ''addresses'' in the range from 4 GB and up.
This form of the 3 GB barrier affects one generation of s, lasting 1 year (Core2Duo (Merom)  Nov 2006 to Oct 2007): the prior generation was limited to 2 GB, while later generations (Nov 2007Oct 2009) allowed 4 GB by supporting PAE and memory hole remapping, and subsequent generations (late 2009 onwards) use 64-bit processors and support over 4 GB.
==Windows version dependencies==
In 's "non-server", or "client", x86 editions of : , , , , and , the 32-bit (x86) versions of these are able to operate x86 processors in PAE mode, and do so by default as long as the CPU present supports the . Nevertheless, these operating systems do not permit addressing of physical memory above the 4 GB address boundary. 
This is not an architectural limit; it is a limit imposed by Microsoft via  enforcement routines as a  for  compatibility issues that were discovered during testing.
Thus, the "3 GB barrier" under x86 Windows "client" operating systems can therefore arise in two slightly different scenarios. In both, RAM near the 4 GB point conflicts with memory-mapped I/O space. Either the BIOS simply disables the conflicting RAM; or, the BIOS remaps the conflicting RAM to physical addresses above the 4 GB point, but x86 Windows client editions refuse to use physical addresses higher than that, even though they are running with PAE enabled. The conflicting RAM is therefore unavailable to the operating system whether it is remapped or not.