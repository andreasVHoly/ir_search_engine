Since achieving W3C recommendation status in 2004, the Web Ontology Language (OWL) has been successfully applied to many problems in computer science. Practical experience with OWL has been quite positive in general; however, it has also revealed room for improvement in several areas. We systematically analyze the identified shortcomings of OWL, such as expressivity issues, problems with its syntaxes, and deficiencies in the definition of OWL species. Furthermore, we present an overview of OWL 2—an extension to and revision of OWL that is currently being developed within the W3C OWL Working Group. Many aspects of OWL have been thoroughly reengineered in OWL 2, thus producing a robust platform for future development of the language.

Since the inception of the Semantic Web, the development of languages for modeling ontologies— conceptualizations of a domain shared by a community of users—has been seen as a key task. The initial proposals focused on RDF and RDF Schema; however, these languages were soon found to be too limited in expressive power [18]. The World Wide Web Consortium (W3C) therefore formed the Web Ontology Working Group, whose goal was to develop an expressive language suitable for application in the Semantic Web. The result of this endeavor was Email addresses: bernardo.cuenca.grau@comlab.ox.ac.uk (Bernardo Cuenca Grau), ian.horrocks@comlab.ox.ac.uk (Ian Horrocks), boris.motik@comlab.ox.ac.uk (Boris Motik), bparsia@cs.man.ac.uk (Bijan Parsia), pfps@research.bell-labs.com (Peter Patel-Schneider), sattler@cs.man.ac.uk (Ulrike Sattler). the OWL Web Ontology Language, which became a W3C recommendation in February 2004. OWL is actually a family of three language variants (often called species) of increasing expressive power: OWL Lite, OWL DL, and OWL Full [28]. The standardization of OWL has sparked the development and/or adaption of a number of reasoners, including FacT++ [37], Pellet [32], RACER [11], and HermiT [26], and ontology editors, including Prot´eg´e 1 and Swoop [21]. OWL ontologies are being developed in areas as diverse as e-Science, medicine, biology, geography, astronomy, defense, and the automotive and aerospace industries. OWL is extensively used in the life sciences community, where it has rapidly become a de facto standard for ontology development and data interchange; for example, see BioPAX, 2 NASA’s SWEET ontologies, 3 and the 1 http://protege.stanford.edu/ 2 http://www.biopax.org/ 3 http://sweet.jpl.nasa.gov/ontology/ Preprint submitted to Elsevier 8 November 2008 National Cancer Institute Thesaurus. 4 Despite the success story surrounding OWL, the numerous contexts in which the language has been applied have revealed some deficiencies in the original design. In Section 2, we present a systematic analysis of problems identified by OWL users and the designers of OWL tools such as editors and reasoners. For example, ontology engineers developing ontologies for biomedical applications have identi- fied significant expressivity limitations of the language. Also, the designers of OWL APIs have identified several practical limitations such as difficulties in parsing OWL ontologies or the inability to check for obvious errors, such as mistyped names. In response to users’ comments and requests, the idea was born to address some of these needs via an incremental revision of OWL, provisionally called OWL 1.1. The initial goal of OWL 1.1 was to exploit recent developments in DL research in order to address some of the expressivity limitations of the language. After extensive discussions at the 2005 OWL Experiences and Directions Workshop, 5 a consensus was reached regarding the new features to be provided by OWL 1.1. This set of new features roughly corresponds to the intersection of what users wanted, what theoreticians said was possible, and what implementors believed was practicable. As the design of OWL 1.1 progressed, it was decided to also take the opportunity to “clean up” the language and its specification, so as to provide a more robust platform for future development. The development of OWL 1.1 was initially undertaken by an informal group of language users and developers. After the original specification reached a mature state and first implementations were released, the OWL 1.1 proposal was submitted to the W3C as a Member Submission 6 with the intention of using it as a starting point for a new W3C Working Group. The Working Group was officially formed in September 2007. As the work on the new language progressed, the initial Member Submission evolved significantly. Consequently, the Working Group eventually decided in April 2008 to call the new language OWL 2 and so indicate a substantial step in the evolution of the language. In Section 3, we present the design of OWL 2 and discuss how it addresses the drawbacks of OWL 1 that we identified in Section 2. We discuss differ- 4 http://www.nci.nih.gov/ 5 http://www.mindswap.org/2005/OWLWorkshop/ 6 http://www.w3.org/Submission/2006/10/ ent aspects of the language, such as its expressivity, syntax, specification style, and various metalogical features. In Section 4 we discuss the current state of implementation, and conclude in Section 5 with a discussion of possible future extensions. To avoid any ambiguity, we refer to the initial version of OWL as OWL 1 in the rest of this paper.
