Modern description logic (DL) reasoners are known to be less efficient for DLs with inverse roles [DH05, GN07]. The current loss of performance is usually caused by the missing applicability of well-known optimization techniques such as caching the satisfiability status of modal successors. The unsoundness of (global) tableaux caching in the presence of inverse roles is the very reason for people to dismiss its applicability [HST99a, DM00, HM00a]. To recognize and avoid unsound cases in tableaux caching is therefore a first step toward a correct use of the global tableaux caching technique. This chapter studies the correct conditions for using tableaux caching in ALCI and shows a global tableaux caching technique that is dynamic and sound.
1The name dynamic caching is taken after the dynamic blocking technique in [HS99]. In here and there the word dynamic is used to denote a relationship (in tableaux structures) that should be dynamically updated and maintained by the proposed techniques.

As shown in Chapter 1, ALCI has propositional constructs, universal restrictions, and existential restrictions. We assume readers are familiar with its syntax and semantics. In this chapter (and throughout this report) we will use two conventions. The first is about a shorthand notation for inverse roles. To express the inverse of a role R, we simply denote it by R?. In some published work, an auxiliary function Inv(.) is used instead for denoting the inverse of a role. Though Inv(R) could possibly denote an inverse of the role R in a more precise way, it is less convenient in writing and does not give better clarity than the simple notation R?. For a role S, if it is the inverse of a role R, then its inverse S? will mean R. Therefore, readers are not expected to see notations such as R?? in this report. The second convention is related to discussing tableaux structures. It is sometimes inevitable to refer to neighborhood relations between tableaux nodes. In the literature,
it is common to see statements like x is an R-neighbor of y, which can be
easily understood as saying x is ys R-neighbor, or put in another way, x and y are two adjacent nodes and there is an R relation from y to x. To be consistent, when we say that x is an R-predecessor of y, we mean that x is ys predecessor and there is a relation R from y to x. Likewise, x is an R-successor of y means that x is ys successor and there is a relation R from y to x.
